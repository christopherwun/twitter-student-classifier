AdaBoost :{'algorithm': 'SAMME', 'base_estimator__bootstrap': True, 'base_estimator__ccp_alpha': 0.0, 'base_estimator__class_weight': None, 'base_estimator__criterion': 'gini', 'base_estimator__max_depth': 30, 'base_estimator__max_features': 'auto', 'base_estimator__max_leaf_nodes': None, 'base_estimator__max_samples': None, 'base_estimator__min_impurity_decrease': 0.0, 'base_estimator__min_impurity_split': None, 'base_estimator__min_samples_leaf': 1, 'base_estimator__min_samples_split': 2, 'base_estimator__min_weight_fraction_leaf': 0.0, 'base_estimator__n_estimators': 400, 'base_estimator__n_jobs': None, 'base_estimator__oob_score': False, 'base_estimator__random_state': 0, 'base_estimator__verbose': 0, 'base_estimator__warm_start': False, 'base_estimator': RandomForestClassifier(max_depth=30, n_estimators=400, random_state=0), 'learning_rate': 0.001, 'n_estimators': 50, 'random_state': 0}
KNearestNeighbors: {'algorithm': 'auto', 'leaf_size': 1.0, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 1, 'p': 1.0, 'weights': 'uniform'}
LinearSVC:  {'C': 10.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'loss': 'squared_hinge', 'max_iter': 1000, 'multi_class': 'ovr', 'penalty': 'l1', 'random_state': 0, 'tol': 1e-10, 'verbose': 0}
LogisticRegression: {'C': 100.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l1', 'random_state': 0, 'solver': 'liblinear', 'tol': 0.01, 'verbose': 0, 'warm_start': False}
RandomForest: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 30.0, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 400, 'n_jobs': None, 'oob_score': False, 'random_state': 0, 'verbose': 0, 'warm_start': False}
StackedClass: {'cv': None, 'estimators': [('tree', DecisionTreeClassifier(max_depth=1)), ('svm', LinearSVC(C=10.0, dual=False, penalty='l1', random_state=0, tol=1e-10)), ('knn', KNeighborsClassifier(leaf_size=1.0, n_neighbors=1, p=1.0)), ('rf', RandomForestClassifier(max_depth=30.0, n_estimators=400, random_state=0)), ('log', LogisticRegression(C=100.0, penalty='l1', random_state=0, solver='liblinear', tol=0.01))], 'final_estimator__C': 1.0, 'final_estimator__class_weight': None, 'final_estimator__dual': False, 'final_estimator__fit_intercept': True, 'final_estimator__intercept_scaling': 1, 'final_estimator__l1_ratio': None, 'final_estimator__max_iter': 100, 'final_estimator__multi_class': 'auto', 'final_estimator__n_jobs': None, 'final_estimator__penalty': 'l2', 'final_estimator__random_state': 0, 'final_estimator__solver': 'lbfgs', 'final_estimator__tol': 0.0001, 'final_estimator__verbose': 0, 'final_estimator__warm_start': False, 'final_estimator': LogisticRegression(random_state=0), 'n_jobs': None, 'passthrough': False, 'stack_method': 'auto', 'verbose': 0, 'tree': DecisionTreeClassifier(max_depth=1), 'svm': LinearSVC(C=10.0, dual=False, penalty='l1', random_state=0, tol=1e-10), 'knn': KNeighborsClassifier(leaf_size=1.0, n_neighbors=1, p=1.0), 'rf': RandomForestClassifier(max_depth=30.0, n_estimators=400, random_state=0), 'log': LogisticRegression(C=100.0, penalty='l1', random_state=0, solver='liblinear',
                   tol=0.01), 'tree__ccp_alpha': 0.0, 'tree__class_weight': None, 'tree__criterion': 'gini', 'tree__max_depth': 1, 'tree__max_features': None, 'tree__max_leaf_nodes': None, 'tree__min_impurity_decrease': 0.0, 'tree__min_impurity_split': None, 'tree__min_samples_leaf': 1, 'tree__min_samples_split': 2, 'tree__min_weight_fraction_leaf': 0.0, 'tree__presort': 'deprecated', 'tree__random_state': None, 'tree__splitter': 'best', 'svm__C': 10.0, 'svm__class_weight': None, 'svm__dual': False, 'svm__fit_intercept': True, 'svm__intercept_scaling': 1, 'svm__loss': 'squared_hinge', 'svm__max_iter': 1000, 'svm__multi_class': 'ovr', 'svm__penalty': 'l1', 'svm__random_state': 0, 'svm__tol': 1e-10, 'svm__verbose': 0, 'knn__algorithm': 'auto', 'knn__leaf_size': 1.0, 'knn__metric': 'minkowski', 'knn__metric_params': None, 'knn__n_jobs': None, 'knn__n_neighbors': 1, 'knn__p': 1.0, 'knn__weights': 'uniform', 'rf__bootstrap': True, 'rf__ccp_alpha': 0.0, 'rf__class_weight': None, 'rf__criterion': 'gini', 'rf__max_depth': 30.0, 'rf__max_features': 'auto', 'rf__max_leaf_nodes': None, 'rf__max_samples': None, 'rf__min_impurity_decrease': 0.0, 'rf__min_impurity_split': None, 'rf__min_samples_leaf': 1, 'rf__min_samples_split': 2, 'rf__min_weight_fraction_leaf': 0.0, 'rf__n_estimators': 400, 'rf__n_jobs': None, 'rf__oob_score': False, 'rf__random_state': 0, 'rf__verbose': 0, 'rf__warm_start': False, 'log__C': 100.0, 'log__class_weight': None, 'log__dual': False, 'log__fit_intercept': True, 'log__intercept_scaling': 1, 'log__l1_ratio': None, 'log__max_iter': 100, 'log__multi_class': 'auto', 'log__n_jobs': None, 'log__penalty': 'l1', 'log__random_state': 0, 'log__solver': 'liblinear', 'log__tol': 0.01, 'log__verbose': 0, 'log__warm_start': False}
RandomForest: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': 30.0, 'max_features': 'auto', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_impurity_split': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 400, 'n_jobs': None, 'oob_score': False, 'random_state': 0, 'verbose': 0, 'warm_start': False}